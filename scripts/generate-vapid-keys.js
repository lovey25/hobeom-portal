#!/usr/bin/env node

/**
 * VAPID 키 생성 스크립트
 * Web Push API를 위한 공개키/비공개키 쌍 생성
 *
 * 사용법: node scripts/generate-vapid-keys.js
 */

const webpush = require("web-push");
const fs = require("fs");
const path = require("path");

console.log("🔑 VAPID 키 생성 중...\n");

// VAPID 키 생성
const vapidKeys = webpush.generateVAPIDKeys();

console.log("✅ VAPID 키 생성 완료!\n");
console.log("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━");
console.log("📋 아래 내용을 .env.local 파일에 추가하세요:\n");
console.log("NEXT_PUBLIC_VAPID_PUBLIC_KEY=" + vapidKeys.publicKey);
console.log("VAPID_PRIVATE_KEY=" + vapidKeys.privateKey);
console.log("VAPID_SUBJECT=mailto:admin@hobeom-portal.com");
console.log("━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n");

// .env.local 파일 자동 생성/업데이트
const envPath = path.join(__dirname, "..", ".env.local");
let envContent = "";

// 기존 .env.local 파일이 있으면 읽기
if (fs.existsSync(envPath)) {
  envContent = fs.readFileSync(envPath, "utf8");
  console.log("📝 기존 .env.local 파일 발견, 업데이트합니다...");

  // VAPID 관련 기존 설정 제거
  envContent = envContent
    .split("\n")
    .filter(
      (line) =>
        !line.startsWith("NEXT_PUBLIC_VAPID_PUBLIC_KEY=") &&
        !line.startsWith("VAPID_PRIVATE_KEY=") &&
        !line.startsWith("VAPID_SUBJECT=")
    )
    .join("\n");

  // 빈 줄 정리
  envContent = envContent.trim() + "\n\n";
} else {
  console.log("📝 새 .env.local 파일을 생성합니다...");
}

// VAPID 설정 추가
envContent += "# Web Push VAPID Keys (generated by scripts/generate-vapid-keys.js)\n";
envContent += `NEXT_PUBLIC_VAPID_PUBLIC_KEY=${vapidKeys.publicKey}\n`;
envContent += `VAPID_PRIVATE_KEY=${vapidKeys.privateKey}\n`;
envContent += `VAPID_SUBJECT=mailto:admin@hobeom-portal.com\n`;

// 파일 저장
fs.writeFileSync(envPath, envContent);

console.log("✅ .env.local 파일에 저장 완료!\n");
console.log("⚠️  보안 주의사항:");
console.log("   - .env.local 파일은 절대 Git에 커밋하지 마세요");
console.log("   - 프로덕션 환경에서는 환경 변수로 설정하세요");
console.log("   - VAPID_PRIVATE_KEY는 외부에 노출되면 안 됩니다\n");
console.log("🚀 다음 단계: npm run dev 재시작");
